{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Comet",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#statements"
		},
		{
			"include": "#callables"
		},
		{
			"include": "#ident"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#digits"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.comet",
					"match": "\\b(as|class|if|import|in|else|enum|while|for|foreach|function|import|in|rethrow|return|try|catch|finally|throw|operator|instanceof|static|next|)\\b"
				},
				{
					"name": "constant.language.nil.comet",
					"match": "\\b(nil)\\b"
				},
				{
					"name": "constant.language.boolean.comet",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "support.function.builtin.comet",
					"match": "\\b(print|clock)\\b"
				},
				{
					"name": "variable.language.self.comet",
					"match": "\\b(self)\\b"
				},
				{
					"name": "variable.language.super.comet",
					"match": "\\b(super)\\b"
				}
			]
		},
		"statements": {
			"patterns": [
				{
					"match": "\\b(var)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
					"captures": {
						"1": {
							"name": "storage.type.comet"
						},
						"2": {
							"name": "support.variable.comet"
						}
					}
				},
				{
					"match": "\\b(function)\\s+([A-Za-z_][A-Za-z0-9_]*(?:!|\\?)?)\\s*\\(([A-Za-z0-9,\\s]*)\\)",
					"captures": {
						"1": {
							"name":"storage.type.function.comet"
						},
						"2": {
							"name":"entity.name.function.comet"
						},
						"3": {
							"patterns": [
								{
									"match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b",
									"name": "variable.parameter.comet"
								}
							]
						}
					}
				},
				{
					"match": "\\b(class)\\s+([A-Za-z_][A-Za-z0-9_]*)(?:\\s*(:)\\s*([A-Za-z_][A-Za-z0-9_]*))?\\b",
					"captures": {
						"1": {
							"name": "storage.type.class.comet"
						},
						"2": {
							"name": "entity.name.type.class.comet"
						},
						"3": {
							"name": "storage.modifier.comet"
						},
						"4": {
							"name": "entity.name.type.class.comet"
						}
					}
				}
			]
		},
		"callables": {
			"patterns": [
				{
					"match": "([A-Za-z_][A-Za-z0-9_]*(!|\\?)?)\\(",
					"name": "support.function.comet"
				}
			]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.comet",
				"begin": "\"",
				"end": "\""
			}, {
				"name": "string.quoted.single.comet",
				"begin": "'",
				"end": "'"
			}]
		},
		"digits": {
			"patterns": [
				{
					"name": "constant.numeric.comet",
					"match": "\\b(?:[0-9]+_?)+(?:.(?:[0-9]+_?)+)?\\b"
				}
			]
		},
		"ident": {
			"patterns": [
				{
					"name": "variable.other.readwrite.comet",
					"match": "\\b[A-Za-z_][A-Za-z0-9_]*(!|\\?)?\\b"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.hash.comet",
					"match": "#.*"
				}
			]
		}
	},
	"scopeName": "source.comet"
}